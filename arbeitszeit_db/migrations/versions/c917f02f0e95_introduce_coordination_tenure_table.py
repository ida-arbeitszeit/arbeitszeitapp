"""Introduce coordination_tenure table

Revision ID: c917f02f0e95
Revises: 30bf7689c032
Create Date: 2023-08-13 12:36:09.404241

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from uuid import uuid4


# revision identifiers, used by Alembic.
revision = 'c917f02f0e95'
down_revision = '30bf7689c032'
branch_labels = None
depends_on = None


def upgrade():

    Base = orm.declarative_base()

    class Cooperation(Base):
        __tablename__ = "cooperation"

        id = sa.Column(sa.String, primary_key=True, default=lambda: str(uuid4()))
        creation_date = sa.Column(sa.DateTime, nullable=False)
        name = sa.Column(sa.String(100), nullable=False)
        definition = sa.Column(sa.String(5000), nullable=False)
        coordinator = sa.Column(sa.String, nullable=False)


    class CoordinationTenure(Base):
        __tablename__ = "coordination_tenure"
        id = sa.Column(sa.String, primary_key=True, default=lambda: str(uuid4()))
        company = sa.Column(sa.String, nullable=False)
        cooperation = sa.Column(sa.String, sa.ForeignKey("cooperation.id"), nullable=False)
        start_date = sa.Column(sa.DateTime, nullable=False)

    op.create_table(
        'coordination_tenure',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('company', sa.String(), nullable=False),
        sa.Column('cooperation', sa.String(), nullable=False),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['company'], ['company.id'], ),
        sa.ForeignKeyConstraint(['cooperation'], ['cooperation.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    bind = op.get_bind()
    with orm.Session(bind=bind) as session:
        for cooperation in session.query(Cooperation):
            tenure = CoordinationTenure(
                id=uuid4(),
                company=cooperation.coordinator,
                cooperation=cooperation.id,
                start_date=cooperation.creation_date
            )
            session.add(tenure)
        session.flush()
    with op.batch_alter_table('cooperation', schema=None) as batch_op:
        batch_op.drop_constraint('cooperation_coordinator_fkey', type_='foreignkey')
        batch_op.drop_column('coordinator')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cooperation', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('coordinator', sa.VARCHAR(), nullable=True)
        )
    op.execute("""
        UPDATE cooperation
        SET coordinator = (
            SELECT company
            FROM coordination_tenure
            WHERE cooperation.id = coordination_tenure.cooperation
            ORDER BY coordination_tenure.start_date DESC
            LIMIT 1
        )
    """)
    with op.batch_alter_table('cooperation', schema=None) as batch_op:
        batch_op.alter_column(
            'coordinator', existing_type=sa.VARCHAR(), nullable=True
        )
    with op.batch_alter_table('cooperation', schema=None) as batch_op:
        batch_op.create_foreign_key('cooperation_coordinator_fkey', 'company', ['coordinator'], ['id'])

    op.drop_table('coordination_tenure')
    # ### end Alembic commands ###
