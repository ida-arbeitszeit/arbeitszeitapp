from collections.abc import Generator

from _typeshed import Incomplete

def clean(data): ...

DEFAULT_VARS: Incomplete

class Request:
    collection: Incomplete
    path: Incomplete
    params: Incomplete
    method: Incomplete
    operation: Incomplete
    def __init__(self, collection, path, params, method, operation) -> None: ...
    @property
    def id(self): ...
    @property
    def url(self): ...
    @property
    def headers(self): ...
    @property
    def folder(self): ...
    def as_dict(self, urlvars: bool = False): ...
    def process_url(self, urlvars: bool = False): ...

class Folder:
    collection: Incomplete
    tag: Incomplete
    description: Incomplete
    def __init__(self, collection, tag) -> None: ...
    @property
    def id(self): ...
    @property
    def order(self): ...
    def as_dict(self): ...

class PostmanCollectionV1:
    api: Incomplete
    swagger: Incomplete
    def __init__(self, api, swagger: bool = False) -> None: ...
    @property
    def uuid(self): ...
    @property
    def id(self): ...
    @property
    def requests(self) -> Generator[Incomplete]: ...
    @property
    def folders(self) -> Generator[Incomplete]: ...
    @property
    def apikeys(self): ...
    def as_dict(self, urlvars: bool = False): ...
