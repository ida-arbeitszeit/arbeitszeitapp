from _typeshed import Incomplete
from werkzeug.exceptions import BadRequest
from wtforms.csrf.core import CSRF

__all__ = ["generate_csrf", "validate_csrf", "CSRFProtect"]

def generate_csrf(secret_key=None, token_key=None): ...
def validate_csrf(data, secret_key=None, time_limit=None, token_key=None) -> None: ...

class _FlaskFormCSRF(CSRF):
    meta: Incomplete
    def setup_form(self, form): ...
    def generate_csrf_token(self, csrf_token_field): ...
    def validate_csrf_token(self, form, field) -> None: ...

class CSRFProtect:
    def __init__(self, app=None) -> None: ...
    def init_app(self, app): ...
    def protect(self) -> None: ...
    def exempt(self, view): ...

class CSRFError(BadRequest):
    description: str
