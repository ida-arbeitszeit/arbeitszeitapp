name: Arbeitszeitapp CI Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  static-code-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v22
    - uses: cachix/cachix-action@v12
      with:
        name: arbeitszeit
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix develop --command ./run-checks --no-unittests

  flake-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v22
    - uses: cachix/cachix-action@v12
      with:
        name: arbeitszeit
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix flake check --print-build-logs

  check-migrations:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v22
    - uses: cachix/cachix-action@v12
      with:
        name: arbeitszeit
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix develop --command alembic upgrade head
      env:
        ARBEITSZEITAPP_DATABASE_URI: postgresql://postgres:postgres@localhost:5432/postgres
        FLASK_APP: arbeitszeit_flask
    - run: nix develop --command alembic check
      env:
        ARBEITSZEITAPP_DATABASE_URI: postgresql://postgres:postgres@localhost:5432/postgres
        FLASK_APP: arbeitszeit_flask
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

  unittests-pip:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4.5.0
      with:
        python-version: '3.11'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m venv ./venv && . ./venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Test
      run: |
        . ./venv/bin/activate
        pytest
        deactivate
      env:
        ARBEITSZEITAPP_TEST_DB: postgresql://postgres:postgres@localhost:5432/postgres
    - name: Try build developer documentation
      run: |
        . ./venv/bin/activate
        make html
        deactivate
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
